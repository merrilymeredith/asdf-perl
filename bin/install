#!/usr/bin/env bash

set -e

source "$(dirname "$0")/utils.sh"

install_perl() {
  local install_type=$1
  local version=$2
  local install_path=$3
  local concurrency=$ASDF_CONCURRENCY

  if [ "$install_type" != "version" ]; then
    echoerr "Cannot install specific ref from source, sorry."
    echoerr "For a list of available versions, see \`asdf list-all perl\`."
    exit 1
  fi
  install_or_update_perl_install

  local build_args=("-j=${concurrency}" -Dusethreads)
  if is_development_version "$version"; then
      build_args+=(-Dusedevel --symlink-devel-executables)
  fi
  echo "perl-install ${build_args[@]} $version $install_path"
  $(perl_install_bin) "${build_args[@]}" "$version" "$install_path"
}

install_cpanm() {
  local install_path=$1
  local cpanm_path="$install_path/bin/cpanm"
  curl -s -L https://cpanmin.us/ -o "$cpanm_path"
  chmod +x "$cpanm_path"
}

install_default_perl_modules() {
  local default_perl_modules="${HOME}/.default-perl-modules"

  if [ ! -f $default_perl_modules ]; then return; fi

  cat "$default_perl_modules" | while read -r name; do
    echo -ne "\nInstalling \033[33m${name}\033[39m perl package... "
    PATH="$ASDF_INSTALL_PATH/bin:$PATH" cpanm "$name" > /dev/null 2>&1 && rc=$? || rc=$?
    if [[ $rc -eq 0 ]]; then
      echo -e "\033[32mSUCCESS\033[39m"
    else
      echo -e "\033[31mFAIL\033[39m"
    fi
  done
}

is_development_version() {
    local version=$1
    local minor_version=$(echo "$version" | cut -d. -f2)

    # Version string containing hyphen, such like "5.8.0-RC1", is development
    # release.
    if [[ "$version" = *-* ]]; then
        return 0
    fi

    # Ancient version like "5.003_13", "5.004m5t1" or "5.005". There's no simple
    # way to decide whether the version is development release or stable one.
    # Thus assuming these are stable version as default.
    if [[ "$minor_version" = 0* ]]; then
        return 1
    fi

    # Here we should have a SemVer-like version consisting of 3 integers, such
    # like "5.32.1". As we know, minor version is even if the version is a
    # stable release.
    if [[ $(expr "$minor_version" % 2) -eq 0 ]]; then
        return 1
    fi

    return 0
}

ensure_perl_install_installed
install_perl "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH"
install_cpanm "$ASDF_INSTALL_PATH"
install_default_perl_modules
